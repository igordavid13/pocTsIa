import OpenAI from 'openai';
import dotenv from 'dotenv';

dotenv.config();

const token = process.env["GITHUB_TOKEN"];
const endpoint = "https://models.inference.ai.azure.com";
const modelName = "gpt-4o";

const client = new OpenAI({ baseURL: endpoint, apiKey: token });

export async function generateResponse(markdownContent: string): Promise<string> {
    try {
        const response = await client.chat.completions.create({
            messages: [
                {
                    role: "system",
                    content: "The user will provide a Markdown file that contains 5 valid products, each starting with the prefix ['/products/slug'], along with extraneous text from web scraping. Your task is to extract the 5 products data, ignore any extraneous text, and only answer with a JSON output, where each product is represented with well-structured keys and one value. One key must have only one value, if there is more than one value, only choose the first one. If exists, include the image URL of the product. Do not include in the JSON the prefix information. The principal informations there will be the keys is the name, brand(if exists), price, image and others specs. If a variable name has '_' replace for ' '"
                },
                { role: "user", content: markdownContent }
            ],
            temperature: 1.0,
            top_p: 1.0,
            max_tokens: 8000,
            model: modelName
        });
        const content = response.choices[0].message.content;

        if (content) {
            // Inserts line break at the end of each line
            const trimmed = content.trim().split('\n');

            // Removes the fist and last line that has: ''' generated by ChatGPT
            trimmed.shift();
            trimmed.pop();

            // Unite the lines for parse
            const jsonString = trimmed.join('\n').trim();
            console.log(jsonString);
            return JSON.parse(jsonString);
        }
        return '';
    } catch (error) {
        console.error('Error generating response:', error);
        return '';
    }
}
